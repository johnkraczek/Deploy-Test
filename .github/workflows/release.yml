name: Build & Tag Wordpress Plugins.
description: "Build and tag Wordpress plugins with the version number."

on:
  workflow_dispatch:
    inputs:
      bump_level:
        type: choice
        description: Bump Level
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
      prerelease-id:
        type: choice
        description: Prerelease ID
        options:
          - alpha
          - beta
          - rc
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: release

      - uses: php-actions/composer@v6
        with:
          working_dir: "release"

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          cd release
          bun install
          git checkout bun.lockb

      - name: Capture Current Version
        id: capture_current_version
        run: |
          cd release
          echo "CURRENT_VERSION=$(bun release-it --release-version --no-increment)" >> $GITHUB_ENV

      - name: Debug Current Version
        run: |
          echo ${{ env.CURRENT_VERSION }}

      - name: Update Version Release Command
        id: capture_version
        run: |
          if [["${{ env.CURRENT_VERSION }}" == *-*]]; then
            echo "RELEASE_VERSION_COMMAND='bun release-it --preRelease --release-version'" >> $GITHUB_ENV
          else
            if [[ "${{ inputs.bump_level }}" == pre* ]]; then
              echo "RELEASE_VERSION_COMMAND='bun release-it ${{ inputs.bump_level }} --release-version --preReleaseId=${{ inputs.prerelease-id }}'" >> $GITHUB_ENV
            else
              echo "RELEASE_VERSION_COMMAND='bun release-it ${{ inputs.bump_level }} --release-version'" >> $GITHUB_ENV
            fi
          fi

      - name: Debug Update Version Release Command
        run: |
          echo ${{ env.RELEASE_VERSION_COMMAND }}

      - name: Capture Update Version
        id: capture_version
        run: |
          cd release
          echo "RELEASE_VERSION='${{ env.RELEASE_VERSION_COMMAND }}

      - name: Debug Release Version
        run: |
          echo ${{ steps.capture_version.outputs.RELEASE_VERSION }}

      - name: Determine Release Command
        id: determine_release_command
        run: |
          if [[ "${{ env.CURRENT_VERSION }}" == *-* ]]; then
            echo "RELEASE_COMMAND='bun release-it --preRelease --release-version'" >> $GITHUB_ENV
          else
            if [[ "${{ inputs.bump_level }}" == pre* ]]; then
              echo "RELEASE_COMMAND='bun release-it ${{ inputs.bump_level }} --release-version --preReleaseId=${{ inputs.prerelease-id }}'" >> $GITHUB_ENV
            else
              echo "RELEASE_COMMAND='bun release-it ${{ inputs.bump_level }} --release-version'" >> $GITHUB_ENV
            fi
          fi

      - name: Debug Determine Release Command
        run: |
          echo ${{ env.RELEASE_COMMAND }}

      # - name: bump version
      #   run: |
      #     cd release
      #     git config user.name github-actions[bot]
      #     git config user.email github-actions[bot]@users.noreply.github.com
      #     if [["${{ env.CURRENT_VERSION }}" == *-*]]; then
      #       echo "RELEASE_VERSION=$(bun release-it --preRelease )" >> $GITHUB_ENV
      #     else
      #       if [[ "${{ inputs.bump_level }}" == pre* ]]; then
      #         echo "RELEASE_VERSION=$(bun release-it ${{ inputs.bump_level }} --preReleaseId=${{ inputs.prerelease-id }})" >> $GITHUB_ENV
      #       else
      #         echo "RELEASE_VERSION=$(bun release-it ${{ inputs.bump_level }})" >> $GITHUB_ENV
      #       fi
      #     fi

      # - name: Zip directory leaving out node_modules and .git
      #   run: |

      #     zip -r "${dir_name}.zip" ./release -x "node_modules/*" -x ".git/*" -x ".release-it.json" -x ".github/*"

      # - name: Debug folder status
      #   run: |
      #     ls -la

      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     name: Release ${{ steps.capture_version.outputs.RELEASE_VERSION }}
      #     tag_name: ${{ steps.capture_version.outputs.RELEASE_VERSION }}
      #     prerelease: ${{ inputs.bump_level == 'prepatch' }}
      #     files: |
      #       *.zip
