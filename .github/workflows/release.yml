name: Build & Tag Wordpress Plugins.
description: "Build and tag Wordpress plugins with the version number."

on:
  workflow_dispatch:
    inputs:
      bump_level:
        type: choice
        description: Bump Level
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: release

      - uses: php-actions/composer@v6
        with:
          working_dir: "release"

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: |
          cd release
          bun install
          git checkout bun.lockb

      - name: Capture Current Version
        id: capture_current_version
        run: |
          cd release
          echo "RELEASE_VERSION=$(bun run release-it --release-version --no-increment)" >> $GITHUB_ENV

      - name: Debug Release Version
        run: |
          echo ${{ steps.capture_current_version.outputs.RELEASE_VERSION }}

      - name: Capture release version
        id: capture_version
        run: |
          cd release
          if [ "${{ inputs.bump_level }}" = "prepatch" ]; then
            echo "RELEASE_VERSION=$(bun run release-it --preRelease --release-version )" >> $GITHUB_ENV
          else
            echo "RELEASE_VERSION=$(bun run release-it ${{inputs.bump_level}} --release-version )" >> $GITHUB_ENV
          fi

      - name: Debug Release Version
        run: |
          echo ${{ steps.capture_version.outputs.RELEASE_VERSION }}

      - name: bump version
        run: |
          cd release
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          if [ "${{ inputs.bump_level }}" = "prepatch" ]; then
            bun run release-it --preRelease --ci
          else
            bun run release-it "${{ inputs.bump_level }}" --ci
          fi

      # - name: Zip directory leaving out node_modules and .git
      #   run: |

      #     zip -r "${dir_name}.zip" ./release -x "node_modules/*" -x ".git/*" -x ".release-it.json" -x ".github/*"

      - name: Debug folder status
        run: |
          ls -la

      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     name: Release ${{ steps.capture_version.outputs.RELEASE_VERSION }}
      #     tag_name: ${{ steps.capture_version.outputs.RELEASE_VERSION }}
      #     prerelease: ${{ inputs.bump_level == 'prepatch' }}
      #     files: |
      #       *.zip
